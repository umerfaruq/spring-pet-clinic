plugins {
    id 'org.springframework.boot' version '2.6.1' apply false
	id 'io.spring.dependency-management' version '1.0.11.RELEASE' apply false
    id 'pl.allegro.tech.build.axion-release' version '1.13.6'
    id "com.github.node-gradle.node" version "3.1.1"
    id 'java'
    id 'base'
}

ext.projectIds = [
    group: "com.workury.springpetclinic",
    sourceCompatibility: "17"
]

allprojects {

    group = projectIds.group
    sourceCompatibility = projectIds.sourceCompatibility

    project.version = scmVersion.version

    repositories {
        mavenCentral()
    }
}

dependencies {
    // Make the root project archives configuration depend on every sub-project
    subprojects.forEach {
        archives(it)
    }
}

node {
    download = true
    version = "16.13.1"
}

task npmCleanWebResources(type: NpmTask) {
    group = "npm"
    description = "Clean web resources"
    args = ["run", "clean-resources"]
}

task npmBuildWebResources(type: NpmTask) {
    group = "npm"
    description = "Build web resources"
    args = ["run", "build-resources"]
}

task npmWatchResources(type: NpmTask) {
    group = "npm"
    description = "Watch web resources"
    args = ["run", "watch-resources"]
}

task npmCleanBuildResources {
    group = "npm"
    description = "Clean and build web resources"
    dependsOn "npmCleanWebResources"
    dependsOn "npmBuildWebResources"
    tasks.findByName("npmBuildWebResources").mustRunAfter "npmCleanWebResources"
}